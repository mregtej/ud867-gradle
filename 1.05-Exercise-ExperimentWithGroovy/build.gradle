/*

Welcome to the solutions to the Groovy Playground exercise! You can run these
tasks by telling Gradle to use this build script, instead of the default
build.gradle. To run the task below, use:

    $ gradle -b solution.gradle stringsAndTypes

or, more compactly

    $ gradle -b solution.gradle sAT

*/

task stringsAndTypes {
    doLast {
        // DONE: Run `$ gradle sAT`
        println "Nice work abbreviating the task name"

        // DONE: Create a variable named foo and assign it the value 4.2
		def foo = 4.2

        // DONE: Print the value and class of foo
		println "foo type: ${foo.class} and foo value: $foo"

        // DONE: Use string interpolation to print the square root of 127
        // HINT: http://docs.oracle.com/javase/7/docs/api/java/lang/Math.html
		println "Sqrt(127) = ${Math.sqrt(127)}"

        // DONE: Assign the current date to foo and print it, along with its type
        // HINT:
        // http://docs.oracle.com/javase/7/docs/api/java/util/package-summary.html
		foo = new java.util.Date()
		println "foo type: ${foo.class} and foo value: $foo"

        // DONE: Use the `substring` method to extract my name from this string
        def hello = "Hello, Jeremy."
		def name = hello.substring(7,13)

        // DONE: Use `toUpperCase` to capitalize and print my name
		println "Name: ${name.toUpperCase()}"

    }
}


task closures {
    doLast {
        // DONE: Declare a closure that takes two arguments and adds them together
        // HINT: http://www.groovy-lang.org/closures.html
		def addClosure = {x,y -> x + y}

        // DONE: Call your closure with arguments 17 and 25, and print the result
        // Beware that something like `println addTwo 17, 25` is ambiguous
		println addClosure(17,25)
    }
}

task lists {
    doLast {
        // DONE: Declare a list containing 5 of your favorite candies
        // HINT: Try searching for "groovy list literal"
		def candies = ["chupachups", "cerezas", "fresas", "coca-colas", "huevos fritos"]

        // DONE: Create a new list of your candies in all caps
        // HINT: http://mrhaki.blogspot.ca/2010/05/groovy-goodness-use-collect-with.html
		def candiesCaps = candies.collect{it.toUpperCase()}

        // DONE: Print each capital candy
		candiesCaps.each{println it}

    }
}
